{"uid":"81e1dcade9d16b68","name":"Сортировка товаров по цене","fullName":"tests.test_catalog.TestCatalog#test_sort_products_by_price","historyId":"c8624e53c0f9dfecd3995bb57f230dca","time":{"start":1673128035905,"stop":1673128085598,"duration":49693},"status":"failed","statusMessage":"AssertionError: Товар с наименованием Diamond Tennis Bracelet отсортирован неверно","statusTrace":"self = <tests.test_catalog.TestCatalog object at 0x000001F62416A440>\nmain_page = <pages.main_page.MainPage object at 0x000001F62419CA90>\nheader = <pages.header.Header object at 0x000001F62419DCC0>\ncatalog_page = <pages.catalog_page.CatalogPage object at 0x000001F624A69A80>\ndata_catalog_price = ['Price: Low to High', False, 'Sort by: Price: Low to High']\n\n    @title('Сортировка товаров по цене')\n    def test_sort_products_by_price(self, main_page, header, catalog_page, data_catalog_price):\n        main_page.open()\n        main_page.should_be_open_main_page()\n    \n        category_name = header.click_on_random_category_and_get_its_name()\n        catalog_page.should_be_open_catalog_page_by_title(category_name=category_name)\n    \n        catalog_page.sort_by(method=data_catalog_price[0])\n>       catalog_page.should_be_sort_by_price(is_reverse=data_catalog_price[1])\n\ntests\\test_catalog.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nutils\\steps.py:29: in impl\n    step_result = func(*args, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.catalog_page.CatalogPage object at 0x000001F624A69A80>\nis_reverse = False\n\n    @step('Проверить сортировку товаров по цене')\n    def should_be_sort_by_price(self, is_reverse: bool = False) -> None:\n        \"\"\"\n        Проверка сортировки товаров по цене.\n    \n        :param is_reverse: True — товары должны быть отсортированы по убыванию, False — по возрастанию.\n        \"\"\"\n    \n        actually_sorted_products = self.get_products()\n        expected_sorted_products = sorted(\n            actually_sorted_products,\n            key=lambda x: x['actual_price'],\n            reverse=is_reverse,\n        )\n    \n        for index in range(len(actually_sorted_products)):\n>           assert actually_sorted_products[index]['actual_price'] == expected_sorted_products[index]['actual_price'], \\\n                f'Товар с наименованием {actually_sorted_products[index][\"name\"]} отсортирован неверно'\nE           AssertionError: Товар с наименованием Diamond Tennis Bracelet отсортирован неверно\n\npages\\catalog_page.py:151: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"browser","time":{"start":1673128019284,"stop":1673128035903,"duration":16619},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"main_page","time":{"start":1673128035903,"stop":1673128035904,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"header","time":{"start":1673128035904,"stop":1673128035904,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"catalog_page","time":{"start":1673128035904,"stop":1673128035904,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Товар с наименованием Diamond Tennis Bracelet отсортирован неверно","statusTrace":"self = <tests.test_catalog.TestCatalog object at 0x000001F62416A440>\nmain_page = <pages.main_page.MainPage object at 0x000001F62419CA90>\nheader = <pages.header.Header object at 0x000001F62419DCC0>\ncatalog_page = <pages.catalog_page.CatalogPage object at 0x000001F624A69A80>\ndata_catalog_price = ['Price: Low to High', False, 'Sort by: Price: Low to High']\n\n    @title('Сортировка товаров по цене')\n    def test_sort_products_by_price(self, main_page, header, catalog_page, data_catalog_price):\n        main_page.open()\n        main_page.should_be_open_main_page()\n    \n        category_name = header.click_on_random_category_and_get_its_name()\n        catalog_page.should_be_open_catalog_page_by_title(category_name=category_name)\n    \n        catalog_page.sort_by(method=data_catalog_price[0])\n>       catalog_page.should_be_sort_by_price(is_reverse=data_catalog_price[1])\n\ntests\\test_catalog.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nutils\\steps.py:29: in impl\n    step_result = func(*args, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.catalog_page.CatalogPage object at 0x000001F624A69A80>\nis_reverse = False\n\n    @step('Проверить сортировку товаров по цене')\n    def should_be_sort_by_price(self, is_reverse: bool = False) -> None:\n        \"\"\"\n        Проверка сортировки товаров по цене.\n    \n        :param is_reverse: True — товары должны быть отсортированы по убыванию, False — по возрастанию.\n        \"\"\"\n    \n        actually_sorted_products = self.get_products()\n        expected_sorted_products = sorted(\n            actually_sorted_products,\n            key=lambda x: x['actual_price'],\n            reverse=is_reverse,\n        )\n    \n        for index in range(len(actually_sorted_products)):\n>           assert actually_sorted_products[index]['actual_price'] == expected_sorted_products[index]['actual_price'], \\\n                f'Товар с наименованием {actually_sorted_products[index][\"name\"]} отсортирован неверно'\nE           AssertionError: Товар с наименованием Diamond Tennis Bracelet отсортирован неверно\n\npages\\catalog_page.py:151: AssertionError","steps":[{"name":"Проверить, что открыта главная страница","time":{"start":1673128038422,"stop":1673128038590,"duration":168},"status":"passed","steps":[],"attachments":[{"uid":"e3748b3945ccf107","name":"Screenshot","source":"e3748b3945ccf107.png","type":"image/png","size":75862}],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":1,"stepsCount":0,"hasContent":true},{"name":"Кликнуть по произвольной категории","time":{"start":1673128038590,"stop":1673128041486,"duration":2896},"status":"passed","steps":[],"attachments":[{"uid":"33681ec0daec8e8c","name":"Screenshot","source":"33681ec0daec8e8c.png","type":"image/png","size":99709}],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":1,"stepsCount":0,"hasContent":true},{"name":"Проверить, что открыта страница каталога: 'JEWELRY'","time":{"start":1673128041487,"stop":1673128041581,"duration":94},"status":"passed","steps":[],"attachments":[{"uid":"2fbe8577e22d59f3","name":"Screenshot","source":"2fbe8577e22d59f3.png","type":"image/png","size":99709}],"parameters":[{"name":"category_name","value":"'JEWELRY'"}],"shouldDisplayMessage":false,"attachmentsCount":1,"stepsCount":0,"hasContent":true},{"name":"Отсортировать товары по: 'Price: Low to High'","time":{"start":1673128041581,"stop":1673128042190,"duration":609},"status":"passed","steps":[],"attachments":[{"uid":"247fd724e744d8e5","name":"Screenshot","source":"247fd724e744d8e5.png","type":"image/png","size":100107}],"parameters":[{"name":"method","value":"'Price: Low to High'"}],"shouldDisplayMessage":false,"attachmentsCount":1,"stepsCount":0,"hasContent":true},{"name":"Проверить сортировку товаров по цене","time":{"start":1673128042190,"stop":1673128085597,"duration":43407},"status":"failed","statusMessage":"AssertionError: Товар с наименованием Diamond Tennis Bracelet отсортирован неверно\n","statusTrace":"  File \"D:\\a\\demo_web_shop\\demo_web_shop\\utils\\steps.py\", line 29, in impl\n    step_result = func(*args, **kwargs)\n  File \"D:\\a\\demo_web_shop\\demo_web_shop\\pages\\catalog_page.py\", line 151, in should_be_sort_by_price\n    assert actually_sorted_products[index]['actual_price'] == expected_sorted_products[index]['actual_price'], \\\n","steps":[],"attachments":[{"uid":"e6e1a67e9cb3da68","name":"Screenshot","source":"e6e1a67e9cb3da68.png","type":"image/png","size":100107}],"parameters":[{"name":"is_reverse","value":"False"}],"shouldDisplayMessage":true,"attachmentsCount":1,"stepsCount":0,"hasContent":true}],"attachments":[{"uid":"bf56142657a776fa","name":"stderr","source":"bf56142657a776fa.txt","type":"text/plain","size":160}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":6,"stepsCount":5,"hasContent":true},"afterStages":[{"name":"browser::0","time":{"start":1673128085726,"stop":1673128087792,"duration":2066},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false}],"labels":[{"name":"epic","value":"Frontend"},{"name":"feature","value":"Каталог"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_catalog"},{"name":"subSuite","value":"TestCatalog"},{"name":"host","value":"fv-az435-776"},{"name":"thread","value":"1180-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_catalog"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data_catalog_price","value":"['Price: Low to High', False, 'Sort by: Price: Low to High']"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"81e1dcade9d16b68.json","parameterValues":["['Price: Low to High', False, 'Sort by: Price: Low to High']"]}